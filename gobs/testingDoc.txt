Test CasesThis document contains information about test cases that Fish Flock has been using for integration testing throughout implementation and debugging. Each test case will include the following: 1) test case name, 2) input file name, 3) output file name, 4) run command, and 5) outcome. All test case input files can be found in gobs/Main/input and all output files can be found in gobs/Main/output in the gobs repo (https://github.com/fishflock/gobs.git).
Within the “Run Command” section of each test case, the parameters are as follows:1) path to input file 2) path to output file3) normalization flag (by number of vectors read in)4) alpha value (grouping threshold)5) vector history length6) number of directions7) statistic test method (“1” for chi-squared / “2” for g-test)
Explanation of input files:* chaos.csv: represents agents in a “chaos state” moving randomly across the field* circling.csv: represents agents circling gravitational points on the field; agents occasionally switch circling directions* oneDirection.csv: represents agents all moving upward (towards the top of the field)* oneD-chaos.csv: represents agents all moving upward then abruptly transitioning into a “chaos state”* forward.csv: represents all agents moving forward from their individual positions on the field; this may look like a “chaos state” at first glance, but is actually each agent performing the same behavior from different points on the field, facing different directions* chaos_circling_combo.csv: represents the agents switching between the chaos state and circling behavior a total of three times (per behavior)* simple_series.csv: represents the agents performing a series of simple behaviors; they transition from forward (all from their individual positions/directions), then moving in one direction (upward), then circling
Special notes:* A “normal” alpha for testing was set at: .001* The output file path was left out of the run commands to make it easier to read (as stated previously, all output files can be found in the gobs/Main/output directory of the repo)* The chi-squared test was not reflective of changes to alphao As alpha decreased, we’d expect there to be more nodes (in other words, a larger E-matrix), but this was not the caseo Different normalization techniques were tested against this statical analysis method, but further adjustment is needed* The g-test has shown to be much more accurate for the cases we tested witho Matrices and graphs were reflective of the data as alpha was adjusted up/down----------------------------------------------------- Chaos Group -----------------------------------------------------Test Case Name: Chaos with X Squared, Regular AlphaInput File Name: chaos.csvOutput File Name: chaos_chi_squared_001.txtRun Command: ./gobs Main/input/chaos.csv chaos_chi_squared_1.txt 1 .001 5 4 1Outcome: This test produced a 1x1 state space transition matrix. This is reasonable because we’d expect the “chaos state” to be represented as a single behavioral primitive.Test Case Name: Chaos with X Squared, Small AlphaInput File Name: chaos.csvOutput File Name: chaos_chi_squared_00001.txtRun Command: ./gobs Main/input/chaos.csv chaos_chi_squared_00001.txt 1 .00001 5 4 1Outcome: This test produced a 1x1 state space transition matrix. This is a concerning result because an alpha of .00001 is extremely small in comparison to the average alpha value of .001 which would mean that more behaviors should get recognized as their own behavioral primitive (even in a chaos state). However, the outcome is still a 1x1 matrix. A similar concern has been observed throughout test cases which leads us to believe further adjustment need to be made to the chi-squared test (to make it more sensitive to change).Test Case Name: Chaos with G-Test, Regular AlphaInput File Name: chaos.csvOutput File Name: chaos_g_test_001.txtRun Command: ./gobs Main/input/chaos.csv chaos_g_test_001.txt 1 .001 5 4 2Outcome: This test produced a 3x3 state space transition matrix. Although we’d expect the “chaos state” to be represented by a single behavioral primitive (as stated in the “Chaos X Squared” test case), this is still a reasonable output because 8 out of 9 values within the 3x3 matrix are similar. This would mean that there’s similar probability of each behavioral primitive pair occurring. Additionally, the compressed vectors 3020, 3110, and 2111 all are spread out amongst the directions (none are significantly skewed toward a single direction) which is indicative of random behavior. Lastly, by running the output through SNA, we saw that the nodes were tightly coupled and each node was connected with each other. This is a good sign that the separate nodes are general patterns picked up in the chaos state.Test Case Name: Chaos with G-Test, Larger AlphaInput File Name: chaos.csvOutput File Name: chaos_g_test_1.txtRun Command: ./gobs Main/input/chaos.csv chaos_g_test_1.txt 1 .1 5 4 2Outcome: This test produced a 2x2 state space transition matrix. As expected, the matrix decreased in size in comparison to the 3x3 matrix produced in the previous test. Additionally, the matrix values are much more heavily skewed toward a single cell indicating that most behaviors could be grouped into a single behavioral primitive. This is expected because as we increase alpha, we should expect more groups to get recognized as similar.----------------------------------------------------- Circling Group -----------------------------------------------------Test Case Name: Circling with X Squared, Regular AlphaInput File Name: circling.csvOutput File Name: circling_chi_squared_001.txtRun Command: ./gobs Main/input/circling.csv circling_chi_squared_001.txt 1 .001 5 4 1Outcome: This test produced a 1x1 state space transition matrix. This is the expected output as all the agents were behaving similarly (circling objects). Test Case Name: Circling with X Squared, Small AlphaInput File Name: circling.csvOutput File Name: circling_chi_squared_00001.txtRun Command: ./gobs Main/input/circling.csv circling_chi_squared_00001.txt 1 .00001 5 4 1Outcome: This test produced a 1x1 state space transition matrix. This is not the expected result as the alpha is much smaller than before. It is expected for a larger matrix as fewer vectors should be seen as similar. This is indicative of an issue with the X Squared test.Test Case Name: Circling with G-Test, Regular AlphaInput File Name: circling.csvOutput File Name: circling_g_test_001.txtRun Command: ./gobs Main/input/circling.csv circling_g_test_001.txt 1 .001 5 4 2Outcome: This test produced a 14x14 state space transition matrix. This output is larger than expected, as the behaviors of the agents are all similar. The circling of the agents is not a perfect match though and changing the alpha has expected results on the matrix (see next test).Test Case Name: Circling with G-Test, Large AlphaInput File Name: circling.csvOutput File Name: circling_g_test_5.txtRun Command: ./gobs Main/input/circling.csv circling_g_test_5.txt 1 .5 5 4 2Outcome: This test produced a 4x4 state space transition matrix. This output is larger than expected, as the behaviors of the agents are all similar but it much closer than the previous alpha value. This is not far off from expected results, though, and the larger alpha than the previous test saw more vectors being grouped as similar. Additionally, a reasonable explanation of the matrix size is that the program likely picked up on nuances in the NetLogo circling simulation such as the agents switching direction and transitioning between one direction and the next.----------------------------------------------------- One Direction Group -----------------------------------------------------Test Case Name: One Direction with X Squared, Regular AlphaInput File Name: oneDirection.csvOutput File Name: oneD_chi_squared_001.txtRun Command: ./gobs Main/input/oneDirection.csv oneD_chi_squared_001.txt 1 .001 5 4 1Outcome: This test case produced a 1x1 state space transition matrix. This output is as expected. This is the simplest input as there is only one number present, because all agents moved in one direction. Test Case Name: One Direction with X Squared, Small AlphaInput File Name: oneDirection.csvOutput File Name: oneD_chi_squared_00001.txtRun Command: ./gobs Main/input/oneDirection.csv oneD_chi_squared_00001.txt 1 .00001 5 4 1Outcome: This test case produced a 1x1 state space transition matrix. This output is as expected. Even with a very small alpha, all of the vectors are the same so all of the vectors should get grouped together.Test Case Name: One Direction with G-Test, Regular AlphaInput File Name: oneDirection.csvOutput File Name: oneD_g_test_001.txtRun Command: ./gobs Main/input/oneDirection.csv oneD_g_test_001.txt 1 .001 5 4 2Outcome: This test case produced a 1x1 state space transition matrix. This output is as expected. This is the simplest input as there is only one number present, because all agents moved in one direction.Test Case Name: One Direction with G-Test, Small AlphaInput File Name: oneDirection.csvOutput File Name: oneD_g_test_00001.txtRun Command: ./gobs Main/input/oneDirection.csv oneD_g_test_00001.txt 1 .00001 5 4 2Outcome: This test case produced a 1x1 state space transition matrix. This output is as expected. Even with a very small alpha, all of the vectors are the same so all of the vectors should get grouped together. We’d expect this result to be consistent regardless of the statistical method used and the alpha value, so these results were a positive sign.----------------------------------------------- One Direction into Chaos Group -----------------------------------------------Test Case Name: One Direction into Chaos with X Squared, Regular AlphaInput File Name: oneD-chaos.csvOutput File Name: oneD_chaos_chi_squared_001.txtRun Command: ./gobs Main/input/oneD-chaos.csv oneD_chaos_chi_squared_001.txt 1 .001 5 4 1Outcome: This test case produced a 1x1 state space transition matrix which is not expected. We would have expected the “chaos state” to have be recognized as at least one separate node (or one community of nodes) from the node representing all the agents moving in one direction. This was not the case. Again, we see that the chi-squared test is not as sensitive as it should be.Test Case Name: One Direction into Chaos with X Squared, Smaller AlphaInput File Name: oneD-chaos.csvOutput File Name: oneD_chaos_chi_squared_00001.txtRun Command: ./gobs Main/input/oneD-chaos.csv oneD_chaos_chi_squared_00001.txt 1 .00001 5 4 1Outcome: This test case produced a 1x1 state space transition matrix which even further reinforces the notion that an adjustment needs to be made to the chi-squared test to make it more sensitive to change. We should have expected at the very least two separate behavioral primitives in the output.Test Case Name: One Direction into Chaos with G-Test, Regular AlphaInput File Name: oneD-chaos.csvOutput File Name: oneD_chaos_g_test_001.txtRun Command: ./gobs Main/input/oneD-chaos.csv oneD_chaos_g_test_001.txt 1 .001 5 4 2Outcome: This test case produced a 5x5 state space transition matrix which is a much more accurate representation of the input data than the chi-squared tests. Not only is it a reasonable size, but the compressed vectors included in the matrix make sense with respect to the data because it includes the vector representative of all agents moving upward (5000) and shows a clear transition into a more random state (5000-->4010-->3020-->2120-->2111). Additionally, the matrix values are skewed more towards the chaos state vectors because the agents were behaving in the chaos state for about ? of the time recorded (and moving upwards for only ? of the time). These observations were further supported by the SNA output. In the graph, the 4010, 3020, 2120, and 2111 nodes were tightly coupled and interconnected while the 5000 (representing collective upward movement) was far away from this cluster. Test Case Name: One Direction into Chaos with G-Test, Larger AlphaInput File Name: oneD-chaos.csvOutput File Name: oneD_chaos_g_test_1.txtRun Command: ./gobs Main/input/oneD-chaos.csv oneD_chaos_g_test_1.txt 1 .1 5 4 2Outcome: This test case produced a 2x2 state space transition matrix which is expected. Now that we’ve increased alpha, we would expect there to be less noise from transitions between behaviors and less noise from the chaos state. So, as expected, the program produced a smaller matrix (in comparison to the 5x5 produced in the previous example) containing one compressed vector that represents the agents all moving upward and the other compressed vector representing the agents in the chaos state. Additionally, just like the previous test case indicated, the matrix is more skewed toward the vector representing the chaos state since the agents spent more time performing this behavior.----------------------------------------------------- Forward Group -----------------------------------------------------Test Case Name: Forward with X Squared, Regular AlphaInput File Name: forward.csvOutput File Name: forward_chi_squared_001.txtRun Command: ./gobs Main/input/forward.csv forward_chi_squared_001.txt 1 .001 5 4 1Outcome: This test case resulted in a 1x1 state space transition matrix. This result makes sense all of the agents were presenting the same behavior, moving forward.Test Case Name: Forward with X Squared, Small AlphaInput File Name: forward.csvOutput File Name: forward_chi_squared_00001.txtRun Command: ./gobs Main/input/forward.csv forward_chi_squared_00001.txt 1 .00001 5 4 1Outcome: This test case results in a 1x1 state space transition matrix. While this result makes some sense, with such a small alpha the validity is questionable. All agents expressed similar behaviors, but it should have been different enough to show up in the data.Test Case Name: Forward with G-Test, Regular AlphaInput File Name: forward.csvOutput File Name: forward_g_test_001.txtRun Command: ./gobs Main/input/forward.csv forward_g_test_001.txt 1 .001 5 4 2Outcome: This test resulted in a 4x4 matrix. This result makes some amount of sense as there were four possible behaviors present in the data, moving up, down, left, or right. The 4x4 matrix could represent the transition in between reading these four behaviors.Test Case Name: Forward with G-Test, Small AlphaInput File Name: forward.csvOutput File Name: forward_g_test_1.txtRun Command: ./gobs Main/input/forward.csv forward_g_test_1.txt 1 .1 5 4 2Outcome: This test resulted in a 4x4 matrix, similar to the previous test case. In this test case more cells within the 4x4 matrix were populated with 0 values, which is to be expected with a large alpha value. This means that more vectors were found to be similar with the larger alpha. While not the expected result of a 1x1 matrix, this is not far off.------------------------------------------------- Chaos Circling Combo Group -------------------------------------------------Test Case Name: Chaos Circling combo with X Squared, Normal AlphaInput File Name: chaos_circling_combo.csvOutput File Name: chaos_circling_chi_squared_001.txtRun Command: ./gobs Main/input/chaos_circling_combo.csv chaos_circling_chi_squared_001.txt 1 .001 5 4 1Outcome: This test resulted in a 1x1 matrix. This result doesn’t match up with the expected output. The circling behavior and chaos behavior should not be viewed as the same behavior. This is indicative of an error with the X Squared test.Test Case Name: Chaos Circling combo with G-Test, Normal AlphaInput File Name: chaos_circling_combo.csvOutput File Name: chaos_circling_g_test_001.txtRun Command: ./gobs Main/input/chaos_circling_combo.csv chaos_circling_g_test_001.txt 1 .001 5 4 2Outcome: This test resulted in a 19x19 matrix. Although this matrix seems large, it has many zeros within it. While this result is not the expected output of a matrix with two behaviors and transitions between them, it is more plausible than with the X Squared test.Test Case Name: Chaos Circling combo with G-Test, Large AlphaInput File Name: chaos_circling_combo.csvOutput File Name: chaos_circling_g_test_1.txtRun Command: ./gobs Main/input/chaos_circling_combo.csv chaos_circling_g_test_1.txt 1 .1 5 4 2Outcome: This test resulted in a 5x5 matrix. This makes sense when compared to the smaller alpha in the previous test. It still raises the question why these two behaviors are not being recognized as discreet. Within the matrix, there are three cells with larger values than the rest, so after social network analysis it could be seen as behavior groupings.----------------------------------------------------- Simple Series Group -----------------------------------------------------Test Case Name: Simple Series with X Squared, Normal AlphaInput File Name: simple-series.csvOutput File Name: simple_series_chi_squared_001.txtRun Command: ./gobs Main/input/simple-series.csv simple_series_chi_squared_001.txt 1 .001 5 4 1Outcome: This test resulted in a 1x1 matrix. This is not the expected output. We should have seen at least three separate behavioral primitives—one to represent the forward behavior, one to represent all agents moving upward, and one to represent the circling behavior. Test Case Name: Simple Series with G-Test, Normal AlphaInput File Name: simple-series.csvOutput File Name: simple_series_g_test_001.txtRun Command: ./gobs Main/input/simple-series.csv simple_series_g_test_001.txt 1 .001 5 4 2Outcome: This test resulted in a 15x15 matrix. The size of this matrix and the compressed vectors included in it are reasonable; however, the known behaviors from the NetLogo simulation are not clear at first glance (based on the SNA output from this 15x15 matrix). The alpha value is too small for this data set. We should expect a clearer representation (less noise) with a higher alpha (see the next test case).Test Case Name: Simple Series with G-Test, Larger AlphaInput File Name: simple-series.csvOutput File Name: simple_series_g_test_1.txtRun Command: ./gobs Main/input/simple-series.csv simple_series_g_test_1.txt 1 .1 5 4 2Outcome: This test resulted in a 6x6 matrix. As expected, this test case (with a larger alpha value) reduced some of the noise from the previous example. This output is more easily interpreted as three separate behaviors because the SNA output depicts a tightly coupled node cluster (representing similar behaviors) and two nodes that were separate from this cluster and from each other.Test Case Name: Simple Series with G-Test, Larger AlphaInput File Name: simple-series.csvOutput File Name: simple_series_g_test_2.txtRun Command: ./gobs Main/input/simple-series.csv simple_series_g_test_2.txt 1 .2 5 4 2Outcome: This test resulted in a 4x4 matrix. By increasing the alpha even more, we eliminate even more noise. The cluster from the previous example now gets recognized as two tightly coupled nodes, rather than a cluster of 4. The other two nodes that are still far from the “cluster.”Test Case Name: Simple Series with G-Test, Very Large AlphaInput File Name: simple-series.csvOutput File Name: simple_series_g_test_3.txtRun Command: ./gobs Main/input/simple-series.csv simple_series_g_test_3.txt 1 .3 5 4 2Outcome: This test resulted in a 3x3 matrix. This output is even closer to what we’d expect from the known series of behaviors in the input file because the there are three separate and rather evenly spaced nodes in the graph, each represent a behavior (forward, upward, or circling). The progression from a normal alpha of .001 to a very large alpha of .3 suggests that the g-test properly reflects changes to alpha.